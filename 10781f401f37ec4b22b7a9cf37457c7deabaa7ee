{
  "comments": [
    {
      "key": {
        "uuid": "da1255d7_ec622316",
        "filename": "doc/specs/new-architecture-sched-worker.rst",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 6
      },
      "writtenOn": "2018-01-03T14:27:38Z",
      "side": 1,
      "message": "Just for my understanding: I understood that builds should be done in sequence for build dep requirements between rpm. So in which case we can run build in parallel ? or is there a mechanism in DLRN to check the build deps we can then use to decide if some package can be built in parallel ?",
      "revId": "10781f401f37ec4b22b7a9cf37457c7deabaa7ee",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da1255d7_8ca967e2",
        "filename": "doc/specs/new-architecture-sched-worker.rst",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 474
      },
      "writtenOn": "2018-01-02T09:41:54Z",
      "side": 1,
      "message": "Do we really need a communication protocol? Could we evaluate if we could rely only on the database as it would be much simler and robust?",
      "range": {
        "startLine": 51,
        "startChar": 1,
        "endLine": 53,
        "endChar": 7
      },
      "revId": "10781f401f37ec4b22b7a9cf37457c7deabaa7ee",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da1255d7_0cbb3710",
        "filename": "doc/specs/new-architecture-sched-worker.rst",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 201
      },
      "writtenOn": "2018-01-02T13:35:40Z",
      "side": 1,
      "message": "Why ZMQ? IIUC it is removed as a dep in Zuul/Nodepool V3, so this would be adding new dep long term.",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 6
      },
      "revId": "10781f401f37ec4b22b7a9cf37457c7deabaa7ee",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da1255d7_ac40ab08",
        "filename": "doc/specs/new-architecture-sched-worker.rst",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 166
      },
      "writtenOn": "2018-01-02T13:54:46Z",
      "side": 1,
      "message": "I\u0027m not found of using a database as an IPC. It\u0027s not suited to manage jobs queues.\n\nIf people worry about using ZMQ, we can switch to mere REST API but ZMQ provides reliable and flexible communication layer. Redis might be an alternative with pub/sub feature, too.",
      "parentUuid": "da1255d7_8ca967e2",
      "range": {
        "startLine": 51,
        "startChar": 1,
        "endLine": 53,
        "endChar": 7
      },
      "revId": "10781f401f37ec4b22b7a9cf37457c7deabaa7ee",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da1255d7_4cf6cfd8",
        "filename": "doc/specs/new-architecture-sched-worker.rst",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 277
      },
      "writtenOn": "2018-01-02T17:39:12Z",
      "side": 1,
      "message": "I think the general idea is to have a queue of builds *somewhere* (even if that doesn\u0027t end up being zeromq) and then have workers pick up builds from that queue instead of the current architecture where each worker sequentially scans and builds packages.\n\nLet\u0027s not bikeshed on zeromq but instead agree whether or not this general direction makes sense.",
      "parentUuid": "da1255d7_0cbb3710",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 6
      },
      "revId": "10781f401f37ec4b22b7a9cf37457c7deabaa7ee",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da1255d7_ecb903ee",
        "filename": "doc/specs/new-architecture-sched-worker.rst",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 201
      },
      "writtenOn": "2018-01-02T19:56:49Z",
      "side": 1,
      "message": "Agreed that ZeroMQ should not be explicitly mentioned in the spec.\n\nI wonder though if this is not reimplementing Zuul, could we consider https://github.com/openstack-infra/zuul/blob/feature/zuulv3/doc/source/admin/drivers/git.rst probably sub-classed  to take rdoinfo into account.",
      "parentUuid": "da1255d7_4cf6cfd8",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 6
      },
      "revId": "10781f401f37ec4b22b7a9cf37457c7deabaa7ee",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da1255d7_6cdbd3ee",
        "filename": "doc/specs/new-architecture-sched-worker.rst",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 6
      },
      "writtenOn": "2018-01-03T14:27:38Z",
      "side": 1,
      "message": "I think avoiding dependencies from components that require system rights in order to be installed and managed (like zmq or mariadb) is better to keep DLRN easy to conf and run. Gearman is a protocol designed to be a task exchange (zuul mainly relies on it). A gearman server can be easily run in full python using the lib developed by openstack infra https://github.com/openstack-infra/gear/. http://gearman.org/\nRunning a gearman server (started by DLRN) could be completely transparent to the user for the single node use case.",
      "parentUuid": "da1255d7_4cf6cfd8",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 6
      },
      "revId": "10781f401f37ec4b22b7a9cf37457c7deabaa7ee",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da1255d7_2c815b90",
        "filename": "doc/specs/new-architecture-sched-worker.rst",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 166
      },
      "writtenOn": "2018-01-03T15:53:16Z",
      "side": 1,
      "message": "Gearman requires a separate server, compared to a single C library + light wrapper (pyzmq).\n\nLet\u0027s assume that we want a communication layer and not assume technical choices at this stage.",
      "parentUuid": "da1255d7_6cdbd3ee",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 6
      },
      "revId": "10781f401f37ec4b22b7a9cf37457c7deabaa7ee",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da1255d7_ec30e309",
        "filename": "doc/specs/new-architecture-sched-worker.rst",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 201
      },
      "writtenOn": "2018-01-03T17:38:15Z",
      "side": 1,
      "message": "Then proposal should be reworked to not mention explicit tech.choice.\nzmq even as inprocess is an infra we\u0027d need to debug and practical experience from openstack-infra is not positive hence it was abandoned.\nGearman is part of Zuul/SF so we\u0027d reuse it since DLRN is a part of SoftwareFactory.\nAt the same time, as already emphasized in the proposal, we\u0027d need to keep simple local case CLI, which works without any of the msg infra.",
      "parentUuid": "da1255d7_2c815b90",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 6
      },
      "revId": "10781f401f37ec4b22b7a9cf37457c7deabaa7ee",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da1255d7_0c00d7a9",
        "filename": "doc/specs/new-architecture-sched-worker.rst",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 277
      },
      "writtenOn": "2018-01-02T17:52:34Z",
      "side": 1,
      "message": "I\u0027m curious -- does this mean we would have on set of git repositories for all workers and releases ?\n\nRight now each worker clones and refreshes it\u0027s own copy of the repositories, right ?\n\nI can see it as a good thing since it means less resource utilization (both cpu and disk space) but it might break some assumptions (i.e, checking out specific commits/branches)",
      "range": {
        "startLine": 74,
        "startChar": 34,
        "endLine": 74,
        "endChar": 62
      },
      "revId": "10781f401f37ec4b22b7a9cf37457c7deabaa7ee",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da1255d7_ccf2bf6f",
        "filename": "doc/specs/new-architecture-sched-worker.rst",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 6
      },
      "writtenOn": "2018-01-03T14:27:38Z",
      "side": 1,
      "message": "In case wokers are not in the same node than the scheduler, workers will access scheduler repositories via git+ssh ?",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 79,
        "endChar": 22
      },
      "revId": "10781f401f37ec4b22b7a9cf37457c7deabaa7ee",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da1255d7_8c7167e3",
        "filename": "doc/specs/new-architecture-sched-worker.rst",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 6
      },
      "writtenOn": "2018-01-03T14:27:38Z",
      "side": 1,
      "message": "As mentioned by Alan there is now a Git driver in Zuul. I think it worth to think a bit about how to run DLRN on top of zuul in order to adjust some pieces of DLRN during this spec implementation like maybe adding ansible roles to build packages, to export build to the repo manager (so consumable by zuul) and use them in DLRN if possible. wdyt ?",
      "revId": "10781f401f37ec4b22b7a9cf37457c7deabaa7ee",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da1255d7_0cc5775a",
        "filename": "doc/specs/new-architecture-sched-worker.rst",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 201
      },
      "writtenOn": "2018-01-03T17:38:15Z",
      "side": 1,
      "message": "ZMQ is only available for \"free\" while SoftwareFactory keeps ZuulV2, long-term it will be gone.",
      "revId": "10781f401f37ec4b22b7a9cf37457c7deabaa7ee",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da1255d7_0c7e97ae",
        "filename": "doc/specs/new-architecture-sched-worker.rst",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 166
      },
      "writtenOn": "2018-01-03T15:53:16Z",
      "side": 1,
      "message": "Plan make sense.",
      "revId": "10781f401f37ec4b22b7a9cf37457c7deabaa7ee",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    }
  ]
}