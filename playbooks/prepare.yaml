---
- hosts: all
  tasks:
    - name: Load operating system specific variables
      include_vars: "{{ item }}"
      failed_when: false
      loop:
          - "family-{{ ansible_os_family | lower }}.yml"
          - "family-{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
          - "{{ ansible_distribution | lower | replace(' ', '-') }}.yml"
          - "{{ ansible_distribution | lower | replace(' ', '-') }}-{{ ansible_distribution_major_version | lower }}.yml"
          - "{{ ansible_distribution | lower | replace(' ', '-') }}-{{ ansible_distribution_version.split('.')[0:2] | join('-') | lower }}.yml"
          - "{{ ansible_distribution | lower | replace(' ', '-') }}-{{ ansible_distribution_version.split('.')[0:3] | join('-') | lower }}.yml"
      tags:
        - always

    - name: Assure EPEL is enabled (CentOS 8)
      become: true
      shell: |
        yum-config-manager --enable epel || dnf install epel-release
      when:
        - ansible_distribution == "CentOS"
        - ansible_distribution_major_version | int == 8

    # NOTE(jpena) The Fedora image contains an exclude for python-virtualenv
    # in dnf.conf, because it installs it from PyPi. We do not need it in DLRN
    # jobs.
    - name: Remove excludes from /etc/dnf/dnf.conf (Fedora)
      lineinfile:
        path: /etc/dnf/dnf.conf
        state: absent
        regexp: '^exclude='
      become: true
      when: ansible_distribution == "Fedora"

    - name: Install required dependencies
      package:
        name: "{{ system_packages }}"
        state: present
      become: true

    - name: Ensure tox is installed in CentOS 7
      shell:
        cmd: |
          easy_install pip
          pip install --ignore-installed tox
      become: true
      when: (ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat') and ansible_distribution_major_version | int == 7

    - name: Install dnf-yum and distribution-gpg-keys (Fedora)
      package:
        name:
          - dnf-yum
          - distribution-gpg-keys
        state: present
      become: true
      when: ansible_distribution == "Fedora"

    # NOTE(jpena) The python3 job will build a CentOS package, so we need
    # to have the CentOS 7 GPG key in the place mock will expect it
    - name: Create symlink for RPM-GPG-KEY-CentOS-7
      file:
        src: /usr/share/distribution-gpg-keys/centos/RPM-GPG-KEY-CentOS-7
        dest: /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
        owner: root
        group: root
        state: link
      become: true
      when: (ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat' or ansible_distribution == 'Fedora') and ansible_distribution_major_version | int > 7

    # NOTE(jpena) This is needed by mock when building on RHEL
    - name: Make sure /usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT exists (RHEL)
      shell:
        cmd: |
          touch /usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT
      become: true
      when: ansible_distribution == 'RedHat' and ansible_distribution_major_version | int > 7

    - name: Set up mock configuration
      shell:
        cmd: |
          cat << EOF | tee /etc/mock/site-defaults.cfg
          config_opts['plugin_conf']['tmpfs_enable'] = True
          config_opts['plugin_conf']['tmpfs_opts'] = {}
          config_opts['plugin_conf']['tmpfs_opts']['required_ram_mb'] = 2048
          config_opts['plugin_conf']['tmpfs_opts']['max_fs_size'] = '4g'
          config_opts['plugin_conf']['tmpfs_opts']['mode'] = '0755'
          config_opts['plugin_conf']['tmpfs_opts']['keep_mounted'] = True
          config_opts['use_bootstrap'] = False
          config_opts['dnf_warning'] = False
          EOF
      become: true

    - name: Add user to mock group
      user: name="{{ ansible_user }}"
            groups=mock
            append=yes
      become: true
