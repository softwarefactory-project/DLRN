{
  "comments": [
    {
      "key": {
        "uuid": "dae975fb_346cfe9b",
        "filename": "dlrn/api/dlrn_api.py",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 277
      },
      "writtenOn": "2017-11-29T16:19:19Z",
      "side": 1,
      "message": "I\u0027m not familiar with the code but is username an actual function ? Should this be auth.username ?",
      "range": {
        "startLine": 331,
        "startChar": 39,
        "endLine": 331,
        "endChar": 41
      },
      "revId": "bb268cf6fd8e2dbfbb952a08586ae9cbb740a0c3",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dae975fb_9413aa0d",
        "filename": "dlrn/api/dlrn_api.py",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 200
      },
      "writtenOn": "2017-11-29T16:32:51Z",
      "side": 1,
      "message": "Yes, this is a method in Flask-HTTPAuth, see https://flask-httpauth.readthedocs.io/en/latest/",
      "parentUuid": "dae975fb_346cfe9b",
      "range": {
        "startLine": 331,
        "startChar": 39,
        "endLine": 331,
        "endChar": 41
      },
      "revId": "bb268cf6fd8e2dbfbb952a08586ae9cbb740a0c3",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dae975fb_341abe18",
        "filename": "dlrn/api/dlrn_api.py",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 277
      },
      "writtenOn": "2017-11-29T16:49:22Z",
      "side": 1,
      "message": "ack",
      "parentUuid": "dae975fb_9413aa0d",
      "range": {
        "startLine": 331,
        "startChar": 39,
        "endLine": 331,
        "endChar": 41
      },
      "revId": "bb268cf6fd8e2dbfbb952a08586ae9cbb740a0c3",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dae975fb_1469fa8b",
        "filename": "dlrn/db.py",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 277
      },
      "writtenOn": "2017-11-29T16:19:19Z",
      "side": 1,
      "message": "I think this should be a foreign key to User.id (side note, User doesn\u0027t have an \"id\" primary key?)",
      "range": {
        "startLine": 102,
        "startChar": 4,
        "endLine": 102,
        "endChar": 8
      },
      "revId": "bb268cf6fd8e2dbfbb952a08586ae9cbb740a0c3",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dae975fb_74f966c8",
        "filename": "dlrn/db.py",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 200
      },
      "writtenOn": "2017-11-29T16:32:51Z",
      "side": 1,
      "message": "So this is a tricky thing, and the reason why I didn\u0027t want to make it a primary key. For an existing database, we can\u0027t know which user did each promotion/vote, and there is no default user created. \n\nSo either we skip enforcing the relationship in the database (it is still done in code, though), or we pick a user at random and assign all existing promotions to it. None of the options looked great, so I chose to let user be null.\n\nAbout your side question: no, there is no \"id\" primary key for a user, the username field is the primary key.",
      "parentUuid": "dae975fb_1469fa8b",
      "range": {
        "startLine": 102,
        "startChar": 4,
        "endLine": 102,
        "endChar": 8
      },
      "revId": "bb268cf6fd8e2dbfbb952a08586ae9cbb740a0c3",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dae975fb_7420464a",
        "filename": "dlrn/db.py",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 277
      },
      "writtenOn": "2017-11-29T16:49:22Z",
      "side": 1,
      "message": "I don\u0027t want to explode the scope of the change, but I think it would be useful to have a default \"system\" user.\n\nWe wouldn\u0027t want the user to be able to do anything, though.. so maybe a null password (but I see password is nullable\u003dFalse) ? or maybe it could have a default password.\n\nThis user would only be used to trace actions back to \"system\" for things like migrations or other events that could occur.\n\nIt could also be used for doing integration testing in the gate ? I don\u0027t know.",
      "parentUuid": "dae975fb_74f966c8",
      "range": {
        "startLine": 102,
        "startChar": 4,
        "endLine": 102,
        "endChar": 8
      },
      "revId": "bb268cf6fd8e2dbfbb952a08586ae9cbb740a0c3",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dae975fb_b4dc6e47",
        "filename": "dlrn/db.py",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 200
      },
      "writtenOn": "2017-11-29T17:00:09Z",
      "side": 1,
      "message": "Mmmm... In general, having a default user sounds like a bad idea to me. For this specific case, we could consider it, as long as I make sure that this user cannot do anything by adding a special case to api/utils.py/verify_pw.\n\nThat said, we can only guarantee that the user is there if we run the alembic migrations, otherwise we\u0027d have to add some special checks in the code to make sure it is always there.\n\nLet me give it some thought and I will upload a new PS.\n\nFor integration testing we create a specific user, so that\u0027s not an issue.",
      "parentUuid": "dae975fb_7420464a",
      "range": {
        "startLine": 102,
        "startChar": 4,
        "endLine": 102,
        "endChar": 8
      },
      "revId": "bb268cf6fd8e2dbfbb952a08586ae9cbb740a0c3",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dae975fb_f40436c7",
        "filename": "dlrn/db.py",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 277
      },
      "writtenOn": "2017-11-29T16:19:19Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 112,
        "startChar": 4,
        "endLine": 112,
        "endChar": 8
      },
      "revId": "bb268cf6fd8e2dbfbb952a08586ae9cbb740a0c3",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dae975fb_d40932df",
        "filename": "dlrn/migrations/versions/cab7697f6564_add_user_column_to_civote_and_promotion.py",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 277
      },
      "writtenOn": "2017-11-29T16:19:19Z",
      "side": 1,
      "message": "Is there a default user in the database ? Should there be one ? Like \"system\" or something ?\nWe could have the migration default the user to that if we don\u0027t have one.",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 35,
        "endChar": 43
      },
      "revId": "bb268cf6fd8e2dbfbb952a08586ae9cbb740a0c3",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dae975fb_54f662d8",
        "filename": "dlrn/migrations/versions/cab7697f6564_add_user_column_to_civote_and_promotion.py",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 200
      },
      "writtenOn": "2017-11-29T16:32:51Z",
      "side": 1,
      "message": "No, there\u0027s no default user.",
      "parentUuid": "dae975fb_d40932df",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 35,
        "endChar": 43
      },
      "revId": "bb268cf6fd8e2dbfbb952a08586ae9cbb740a0c3",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    }
  ]
}